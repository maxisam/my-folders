{
    "name": "my-folders",
    "displayName": "my-folders",
    "version": "0.6.0",
    "description": "my-folders",
    "publisher": "maxisam",
    "private": true,
    "preview": true,
    "author": {
        "name": "maxisam",
        "url": "https://github.com/maxisam"
    },
    "license": "SEE LICENSE IN LICENSE",
    "homepage": "https://github.com/maxisam/my-folders/blob/master/README.md",
    "repository": {
        "type": "git",
        "url": "https://github.com/maxisam/my-folders"
    },
    "bugs": {
        "url": "https://github.com/maxisam/my-folders/issues"
    },
    "keywords": [
        "boilerplate",
        "template"
    ],
    "categories": [
        "Other"
    ],
    "main": "./out/src/extension.js",
    "extensionDependencies": [
        "vscode.git"
    ],
    "icon": "assets/logo.png",
    "packageManager": "pnpm@9.9.0",
    "engines": {
        "vscode": "^1.90.0"
    },
    "badges": [
        {
            "url": "https://img.shields.io/badge/PRs-welcome-brightgreen.svg",
            "description": "PRs Welcome",
            "href": "https://github.com/maxisam/my-folders/fork"
        }
    ],
    "activationEvents": [],
    "contributes": {
        "viewsWelcome": [
            {
                "view": "my-folders",
                "contents": "Right click and add a file or folder"
            }
        ],
        "views": {
            "explorer": [
                {
                    "id": "my-folders",
                    "name": "My Folders"
                }
            ]
        },
        "commands": [
            {
                "command": "my-folders.refreshEntry",
                "title": "Refresh",
                "icon": "$(refresh)"
            },
            {
                "command": "my-folders.selectItem",
                "title": "Add to My Folders"
            },
            {
                "command": "my-folders.removeItem",
                "title": "Remove from My Folders",
                "icon": "$(close)"
            },
            {
                "command": "my-folders.renameItem",
                "title": "Rename bookmark",
                "icon": "$(pencil)"
            },
            {
                "command": "my-folders.removeAllItems",
                "title": "Remove All Items",
                "icon": "$(trash)"
            },
            {
                "command": "my-folders.cantRemoveItem",
                "title": "Remove from My Folders"
            },
            {
                "command": "my-folders.focusInExplorer",
                "title": "Focus on this in explorer view"
            },
            {
                "command": "my-folders.clearFocusScope",
                "title": "Clear focus scope",
                "icon": "$(eye-closed)"
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "my-folders.refreshEntry",
                    "when": "view == my-folders",
                    "group": "navigation"
                },
                {
                    "command": "my-folders.removeAllItems",
                    "when": "view == my-folders",
                    "group": "navigation"
                },
                {
                    "command": "my-folders.clearFocusScope",
                    "group": "navigation",
                    "when": "view == 'workbench.explorer.fileView' && my-folders.isScoped"
                }
            ],
            "explorer/context": [
                {
                    "command": "my-folders.selectItem"
                }
            ],
            "view/item/context": [
                {
                    "command": "my-folders.removeItem",
                    "when": "view == my-folders && (viewItem == myFoldersDirectory || viewItem == myFoldersFile)"
                },
                {
                    "command": "my-folders.removeItem",
                    "when": "view == my-folders && (viewItem == myFoldersDirectory || viewItem == myFoldersFile)",
                    "group": "inline"
                },
                {
                    "command": "my-folders.renameItem",
                    "when": "view == my-folders && (viewItem == myFoldersDirectory || viewItem == myFoldersFile)"
                },
                {
                    "command": "my-folders.cantRemoveItem",
                    "when": "view == my-folders && viewItem != myFoldersDirectory && viewItem != myFoldersFile"
                },
                {
                    "command": "my-folders.focusInExplorer",
                    "when": "view == my-folders && viewItem == myFoldersDirectory"
                }
            ]
        },
        "configuration": {
            "title": "My Folders",
            "properties": {
                "my-folders.saveWorkspace": {
                    "type": "boolean",
                    "default": true,
                    "description": "Save the current explorer view when closing VS Code"
                }
            }
        }
    },
    "eslintConfig": {
        "extends": "@yutengjing/eslint-config-typescript",
        "ignorePatterns": [
            "test-workspace"
        ]
    },
    "prettier": "@yutengjing/prettier-config",
    "lint-staged": {
        "*.{ts,json,md}": [
            "eslint --fix",
            "prettier --write"
        ]
    },
    "simple-git-hooks": {
        "pre-commit": "npx lint-staged"
    },
    "scripts": {
        "vscode:prepublish": "pnpm esbuild:base --minify",
        "preinstall": "npx only-allow pnpm",
        "postinstall": "stale-dep -u",
        "prepare": "simple-git-hooks",
        "clean": "npx rimraf -rf ./out",
        "esbuild:base": "stale-dep && tsx scripts/esbuild.ts",
        "esbuild:watch": "pnpm esbuild:base --sourcemap --watch",
        "esbuild:analyze": "pnpm esbuild:base --minify --metafile --analyze && esbuild-visualizer --metadata ./meta.json --open",
        "compile:test": "pnpm clean && tsc -b ./test/tsconfig.json",
        "lint": "eslint src/** --fix",
        "test": "pnpm compile:test && node ./out/test/runTests.js",
        "package": "vsce package --no-dependencies",
        "release": "npx @yutengjing/release",
        "publish:vs-marketplace": "vsce publish --no-dependencies",
        "publish:open-vsx": "ovsx publish --no-dependencies"
    },
    "devDependencies": {
        "@npmcli/promise-spawn": "^8.0.2",
        "@types/glob": "^8.1.0",
        "@types/jest": "^29.5.14",
        "@types/mocha": "^10.0.9",
        "@types/node": "~20.17.4",
        "@types/npmcli__promise-spawn": "^6.0.3",
        "@types/sinon": "17.0.3",
        "@types/vscode": "1.95.0",
        "@vscode/test-electron": "^2.4.1",
        "@vscode/vsce": "^3.2.1",
        "@yutengjing/eslint-config-typescript": "^1.2.5",
        "@yutengjing/prettier-config": "^1.3.0",
        "@yutengjing/release": "^0.3.1",
        "esbuild": "~0.24.0",
        "esbuild-visualizer": "^0.6.0",
        "eslint": "^9.13.0",
        "eslint-config-prettier": "^9.1.0",
        "eslint-plugin-jest": "^28.8.3",
        "eslint-plugin-prettier": "^5.2.1",
        "glob": "^11.0.0",
        "jest": "^29.7.0",
        "jest-mock-vscode": "^4.0.3",
        "lint-staged": "^15.2.10",
        "mocha": "^10.8.2",
        "ovsx": "^0.10.0",
        "prettier": "^3.3.3",
        "rimraf": "^6.0.1",
        "simple-git-hooks": "^2.11.1",
        "sinon": "19.0.2",
        "stale-dep": "^0.7.0",
        "ts-jest": "^29.2.5",
        "ts-node": "^10.9.2",
        "tsx": "^4.19.2",
        "typescript": "~5.6.3"
    }
}
